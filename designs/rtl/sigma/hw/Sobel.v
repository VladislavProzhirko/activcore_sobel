// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Sobel,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100t-csg324-3,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.348000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=792,HLS_SYN_LUT=2931,HLS_VERSION=2019_2}" *)

module Sobel (
        image_in_address0,
        image_in_ce0,
        image_in_d0,
        image_in_q0,
        image_in_we0,
        image_out_address0,
        image_out_ce0,
        image_out_d0,
        image_out_q0,
        image_out_we0,
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle
);


output  [4:0] image_in_address0;
output   image_in_ce0;
output  [31:0] image_in_d0;
input  [31:0] image_in_q0;
output   image_in_we0;
output  [4:0] image_out_address0;
output   image_out_ce0;
output  [31:0] image_out_d0;
input  [31:0] image_out_q0;
output   image_out_we0;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;

wire    Block_proc_U0_ap_start;
wire    Block_proc_U0_ap_done;
wire    Block_proc_U0_ap_continue;
wire    Block_proc_U0_ap_idle;
wire    Block_proc_U0_ap_ready;
wire   [4:0] Block_proc_U0_src_rows_V_out_din;
wire    Block_proc_U0_src_rows_V_out_write;
wire   [4:0] Block_proc_U0_src_cols_V_out_din;
wire    Block_proc_U0_src_cols_V_out_write;
wire    Array2Mat_U0_ap_start;
wire    Array2Mat_U0_ap_done;
wire    Array2Mat_U0_ap_continue;
wire    Array2Mat_U0_ap_idle;
wire    Array2Mat_U0_ap_ready;
wire    Array2Mat_U0_start_out;
wire    Array2Mat_U0_start_write;
wire   [4:0] Array2Mat_U0_fb_address0;
wire    Array2Mat_U0_fb_ce0;
wire    Array2Mat_U0_img_rows_V_read;
wire    Array2Mat_U0_img_cols_V_read;
wire   [7:0] Array2Mat_U0_img_data_stream_V_din;
wire    Array2Mat_U0_img_data_stream_V_write;
wire   [4:0] Array2Mat_U0_img_rows_V_out_din;
wire    Array2Mat_U0_img_rows_V_out_write;
wire   [4:0] Array2Mat_U0_img_cols_V_out_din;
wire    Array2Mat_U0_img_cols_V_out_write;
wire    Filter2D_U0_ap_start;
wire    Filter2D_U0_ap_done;
wire    Filter2D_U0_ap_continue;
wire    Filter2D_U0_ap_idle;
wire    Filter2D_U0_ap_ready;
wire    Filter2D_U0_p_src_rows_V_read;
wire    Filter2D_U0_p_src_cols_V_read;
wire    Filter2D_U0_p_src_data_stream_V_read;
wire   [7:0] Filter2D_U0_p_dst_data_stream_V_din;
wire    Filter2D_U0_p_dst_data_stream_V_write;
wire    Mat2Array_U0_ap_start;
wire    Mat2Array_U0_ap_done;
wire    Mat2Array_U0_ap_continue;
wire    Mat2Array_U0_ap_idle;
wire    Mat2Array_U0_ap_ready;
wire    Mat2Array_U0_img_data_stream_V_read;
wire   [4:0] Mat2Array_U0_fb_address0;
wire    Mat2Array_U0_fb_ce0;
wire    Mat2Array_U0_fb_we0;
wire   [31:0] Mat2Array_U0_fb_d0;
wire    ap_sync_continue;
wire    src_rows_V_c_full_n;
wire   [4:0] src_rows_V_c_dout;
wire    src_rows_V_c_empty_n;
wire    src_cols_V_c_full_n;
wire   [4:0] src_cols_V_c_dout;
wire    src_cols_V_c_empty_n;
wire    src_data_stream_0_V_full_n;
wire   [7:0] src_data_stream_0_V_dout;
wire    src_data_stream_0_V_empty_n;
wire    src_rows_V_c8_full_n;
wire   [4:0] src_rows_V_c8_dout;
wire    src_rows_V_c8_empty_n;
wire    src_cols_V_c9_full_n;
wire   [4:0] src_cols_V_c9_dout;
wire    src_cols_V_c9_empty_n;
wire    dst_data_stream_0_V_full_n;
wire   [7:0] dst_data_stream_0_V_dout;
wire    dst_data_stream_0_V_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_Block_proc_U0_ap_ready;
wire    ap_sync_Block_proc_U0_ap_ready;
reg   [1:0] Block_proc_U0_ap_ready_count;
reg    ap_sync_reg_Array2Mat_U0_ap_ready;
wire    ap_sync_Array2Mat_U0_ap_ready;
reg   [1:0] Array2Mat_U0_ap_ready_count;
reg    ap_sync_reg_Mat2Array_U0_ap_ready;
wire    ap_sync_Mat2Array_U0_ap_ready;
reg   [1:0] Mat2Array_U0_ap_ready_count;
wire    Block_proc_U0_start_full_n;
wire    Block_proc_U0_start_write;
wire   [0:0] start_for_Filter2D_U0_din;
wire    start_for_Filter2D_U0_full_n;
wire   [0:0] start_for_Filter2D_U0_dout;
wire    start_for_Filter2D_U0_empty_n;
wire    Filter2D_U0_start_full_n;
wire    Filter2D_U0_start_write;
wire    Mat2Array_U0_start_full_n;
wire    Mat2Array_U0_start_write;

// power-on initialization
initial begin
#0 ap_sync_reg_Block_proc_U0_ap_ready = 1'b0;
#0 Block_proc_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_Array2Mat_U0_ap_ready = 1'b0;
#0 Array2Mat_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_Mat2Array_U0_ap_ready = 1'b0;
#0 Mat2Array_U0_ap_ready_count = 2'd0;
end

Block_proc Block_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Block_proc_U0_ap_start),
    .ap_done(Block_proc_U0_ap_done),
    .ap_continue(Block_proc_U0_ap_continue),
    .ap_idle(Block_proc_U0_ap_idle),
    .ap_ready(Block_proc_U0_ap_ready),
    .src_rows_V_out_din(Block_proc_U0_src_rows_V_out_din),
    .src_rows_V_out_full_n(src_rows_V_c_full_n),
    .src_rows_V_out_write(Block_proc_U0_src_rows_V_out_write),
    .src_cols_V_out_din(Block_proc_U0_src_cols_V_out_din),
    .src_cols_V_out_full_n(src_cols_V_c_full_n),
    .src_cols_V_out_write(Block_proc_U0_src_cols_V_out_write)
);

Array2Mat Array2Mat_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Array2Mat_U0_ap_start),
    .start_full_n(start_for_Filter2D_U0_full_n),
    .ap_done(Array2Mat_U0_ap_done),
    .ap_continue(Array2Mat_U0_ap_continue),
    .ap_idle(Array2Mat_U0_ap_idle),
    .ap_ready(Array2Mat_U0_ap_ready),
    .start_out(Array2Mat_U0_start_out),
    .start_write(Array2Mat_U0_start_write),
    .fb_address0(Array2Mat_U0_fb_address0),
    .fb_ce0(Array2Mat_U0_fb_ce0),
    .fb_q0(image_in_q0),
    .img_rows_V_dout(src_rows_V_c_dout),
    .img_rows_V_empty_n(src_rows_V_c_empty_n),
    .img_rows_V_read(Array2Mat_U0_img_rows_V_read),
    .img_cols_V_dout(src_cols_V_c_dout),
    .img_cols_V_empty_n(src_cols_V_c_empty_n),
    .img_cols_V_read(Array2Mat_U0_img_cols_V_read),
    .img_data_stream_V_din(Array2Mat_U0_img_data_stream_V_din),
    .img_data_stream_V_full_n(src_data_stream_0_V_full_n),
    .img_data_stream_V_write(Array2Mat_U0_img_data_stream_V_write),
    .img_rows_V_out_din(Array2Mat_U0_img_rows_V_out_din),
    .img_rows_V_out_full_n(src_rows_V_c8_full_n),
    .img_rows_V_out_write(Array2Mat_U0_img_rows_V_out_write),
    .img_cols_V_out_din(Array2Mat_U0_img_cols_V_out_din),
    .img_cols_V_out_full_n(src_cols_V_c9_full_n),
    .img_cols_V_out_write(Array2Mat_U0_img_cols_V_out_write)
);

Filter2D Filter2D_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Filter2D_U0_ap_start),
    .ap_done(Filter2D_U0_ap_done),
    .ap_continue(Filter2D_U0_ap_continue),
    .ap_idle(Filter2D_U0_ap_idle),
    .ap_ready(Filter2D_U0_ap_ready),
    .p_src_rows_V_dout(src_rows_V_c8_dout),
    .p_src_rows_V_empty_n(src_rows_V_c8_empty_n),
    .p_src_rows_V_read(Filter2D_U0_p_src_rows_V_read),
    .p_src_cols_V_dout(src_cols_V_c9_dout),
    .p_src_cols_V_empty_n(src_cols_V_c9_empty_n),
    .p_src_cols_V_read(Filter2D_U0_p_src_cols_V_read),
    .p_src_data_stream_V_dout(src_data_stream_0_V_dout),
    .p_src_data_stream_V_empty_n(src_data_stream_0_V_empty_n),
    .p_src_data_stream_V_read(Filter2D_U0_p_src_data_stream_V_read),
    .p_dst_data_stream_V_din(Filter2D_U0_p_dst_data_stream_V_din),
    .p_dst_data_stream_V_full_n(dst_data_stream_0_V_full_n),
    .p_dst_data_stream_V_write(Filter2D_U0_p_dst_data_stream_V_write)
);

Mat2Array Mat2Array_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Mat2Array_U0_ap_start),
    .ap_done(Mat2Array_U0_ap_done),
    .ap_continue(Mat2Array_U0_ap_continue),
    .ap_idle(Mat2Array_U0_ap_idle),
    .ap_ready(Mat2Array_U0_ap_ready),
    .img_data_stream_V_dout(dst_data_stream_0_V_dout),
    .img_data_stream_V_empty_n(dst_data_stream_0_V_empty_n),
    .img_data_stream_V_read(Mat2Array_U0_img_data_stream_V_read),
    .fb_address0(Mat2Array_U0_fb_address0),
    .fb_ce0(Mat2Array_U0_fb_ce0),
    .fb_we0(Mat2Array_U0_fb_we0),
    .fb_d0(Mat2Array_U0_fb_d0),
    .fb_q0(image_out_q0)
);

fifo_w5_d2_A src_rows_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_proc_U0_src_rows_V_out_din),
    .if_full_n(src_rows_V_c_full_n),
    .if_write(Block_proc_U0_src_rows_V_out_write),
    .if_dout(src_rows_V_c_dout),
    .if_empty_n(src_rows_V_c_empty_n),
    .if_read(Array2Mat_U0_img_rows_V_read)
);

fifo_w5_d2_A src_cols_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_proc_U0_src_cols_V_out_din),
    .if_full_n(src_cols_V_c_full_n),
    .if_write(Block_proc_U0_src_cols_V_out_write),
    .if_dout(src_cols_V_c_dout),
    .if_empty_n(src_cols_V_c_empty_n),
    .if_read(Array2Mat_U0_img_cols_V_read)
);

fifo_w8_d2_A src_data_stream_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Array2Mat_U0_img_data_stream_V_din),
    .if_full_n(src_data_stream_0_V_full_n),
    .if_write(Array2Mat_U0_img_data_stream_V_write),
    .if_dout(src_data_stream_0_V_dout),
    .if_empty_n(src_data_stream_0_V_empty_n),
    .if_read(Filter2D_U0_p_src_data_stream_V_read)
);

fifo_w5_d2_A src_rows_V_c8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Array2Mat_U0_img_rows_V_out_din),
    .if_full_n(src_rows_V_c8_full_n),
    .if_write(Array2Mat_U0_img_rows_V_out_write),
    .if_dout(src_rows_V_c8_dout),
    .if_empty_n(src_rows_V_c8_empty_n),
    .if_read(Filter2D_U0_p_src_rows_V_read)
);

fifo_w5_d2_A src_cols_V_c9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Array2Mat_U0_img_cols_V_out_din),
    .if_full_n(src_cols_V_c9_full_n),
    .if_write(Array2Mat_U0_img_cols_V_out_write),
    .if_dout(src_cols_V_c9_dout),
    .if_empty_n(src_cols_V_c9_empty_n),
    .if_read(Filter2D_U0_p_src_cols_V_read)
);

fifo_w8_d2_A dst_data_stream_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Filter2D_U0_p_dst_data_stream_V_din),
    .if_full_n(dst_data_stream_0_V_full_n),
    .if_write(Filter2D_U0_p_dst_data_stream_V_write),
    .if_dout(dst_data_stream_0_V_dout),
    .if_empty_n(dst_data_stream_0_V_empty_n),
    .if_read(Mat2Array_U0_img_data_stream_V_read)
);

start_for_Filter2eOg start_for_Filter2eOg_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_Filter2D_U0_din),
    .if_full_n(start_for_Filter2D_U0_full_n),
    .if_write(Array2Mat_U0_start_write),
    .if_dout(start_for_Filter2D_U0_dout),
    .if_empty_n(start_for_Filter2D_U0_empty_n),
    .if_read(Filter2D_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_Array2Mat_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_Array2Mat_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Array2Mat_U0_ap_ready <= ap_sync_Array2Mat_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_Block_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_Block_proc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Block_proc_U0_ap_ready <= ap_sync_Block_proc_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_Mat2Array_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_Mat2Array_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Mat2Array_U0_ap_ready <= ap_sync_Mat2Array_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == Array2Mat_U0_ap_ready) & (ap_sync_ready == 1'b1))) begin
        Array2Mat_U0_ap_ready_count <= (Array2Mat_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (1'b1 == Array2Mat_U0_ap_ready))) begin
        Array2Mat_U0_ap_ready_count <= (Array2Mat_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == Block_proc_U0_ap_ready) & (ap_sync_ready == 1'b1))) begin
        Block_proc_U0_ap_ready_count <= (Block_proc_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (1'b1 == Block_proc_U0_ap_ready))) begin
        Block_proc_U0_ap_ready_count <= (Block_proc_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == Mat2Array_U0_ap_ready) & (ap_sync_ready == 1'b1))) begin
        Mat2Array_U0_ap_ready_count <= (Mat2Array_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (1'b1 == Mat2Array_U0_ap_ready))) begin
        Mat2Array_U0_ap_ready_count <= (Mat2Array_U0_ap_ready_count + 2'd1);
    end
end

assign Array2Mat_U0_ap_continue = 1'b1;

assign Array2Mat_U0_ap_start = ((ap_sync_reg_Array2Mat_U0_ap_ready ^ 1'b1) & ap_start);

assign Block_proc_U0_ap_continue = 1'b1;

assign Block_proc_U0_ap_start = ((ap_sync_reg_Block_proc_U0_ap_ready ^ 1'b1) & ap_start);

assign Block_proc_U0_start_full_n = 1'b1;

assign Block_proc_U0_start_write = 1'b0;

assign Filter2D_U0_ap_continue = 1'b1;

assign Filter2D_U0_ap_start = start_for_Filter2D_U0_empty_n;

assign Filter2D_U0_start_full_n = 1'b1;

assign Filter2D_U0_start_write = 1'b0;

assign Mat2Array_U0_ap_continue = 1'b1;

assign Mat2Array_U0_ap_start = ((ap_sync_reg_Mat2Array_U0_ap_ready ^ 1'b1) & ap_start);

assign Mat2Array_U0_start_full_n = 1'b1;

assign Mat2Array_U0_start_write = 1'b0;

assign ap_done = Mat2Array_U0_ap_done;

assign ap_idle = (Mat2Array_U0_ap_idle & Filter2D_U0_ap_idle & Block_proc_U0_ap_idle & Array2Mat_U0_ap_idle);

assign ap_ready = ap_sync_ready;

assign ap_sync_Array2Mat_U0_ap_ready = (ap_sync_reg_Array2Mat_U0_ap_ready | Array2Mat_U0_ap_ready);

assign ap_sync_Block_proc_U0_ap_ready = (ap_sync_reg_Block_proc_U0_ap_ready | Block_proc_U0_ap_ready);

assign ap_sync_Mat2Array_U0_ap_ready = (ap_sync_reg_Mat2Array_U0_ap_ready | Mat2Array_U0_ap_ready);

assign ap_sync_continue = 1'b1;

assign ap_sync_done = Mat2Array_U0_ap_done;

assign ap_sync_ready = (ap_sync_Mat2Array_U0_ap_ready & ap_sync_Block_proc_U0_ap_ready & ap_sync_Array2Mat_U0_ap_ready);

assign image_in_address0 = Array2Mat_U0_fb_address0;

assign image_in_ce0 = Array2Mat_U0_fb_ce0;

assign image_in_d0 = 32'd0;

assign image_in_we0 = 1'b0;

assign image_out_address0 = Mat2Array_U0_fb_address0;

assign image_out_ce0 = Mat2Array_U0_fb_ce0;

assign image_out_d0 = Mat2Array_U0_fb_d0;

assign image_out_we0 = Mat2Array_U0_fb_we0;

assign start_for_Filter2D_U0_din = 1'b1;

endmodule //Sobel
